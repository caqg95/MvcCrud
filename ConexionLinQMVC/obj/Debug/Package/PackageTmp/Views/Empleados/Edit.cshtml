@model ConexionLinQMVC.Data.tblEmpleados

@{
    ViewBag.Title = "Editar Empleado";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Editar Empleado</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <ol class="breadcrumb">
            <li>@Html.ActionLink("Inicio", "Index", "Home")</li>
            <li class="dropdown">@Html.ActionLink("Empleados", "Editar", "Empleados") </li>
            <li class="active">Editar Empleado</li>
        </ol>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.IdEmpleados)

        <div class="form-group">
            @Html.LabelFor(model => model.Nombres, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Nombres, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Nombres, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Activo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Activo)
                    @Html.ValidationMessageFor(model => model.Activo, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IdDepartamento, "IdDepartamento", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("IdDepartamento", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.IdDepartamento, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IdTurno, "IdTurno", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("IdTurno", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.IdTurno, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Salario, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Salario, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Salario, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DiaLibre, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DiaLibre, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DiaLibre, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <div class="btn-group dropdown" style="margin-bottom:5px">
                    <button type="submit" class="btn btn-primary btn-sm">Guardar</button>
                    <button class="btn btn-primary btn-sm dropdown-toggle" data-toggle="dropdown">
                        <span class="caret"></span>
                    </button>
                    <ul class="dropdown-menu">
                        <li>
                            <a href="#" data-toggle="modal" data-target="#ModalEliminar">Eliminar</a>
                        </li>
                    </ul>
                </div>
                or @Html.ActionLink("Cancelar", "Index")
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Retornar", "Index")
</div>
<div class="modal fade" id="ModalEliminar" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h4 class="modal-title">Confirmación de Eliminado</h4>
            </div>
            <div class="modal-body">
                <p>Quiere borrar el Empleado '@Model.IdEmpleados-@Model.Nombres'. </p>
                <p>
                    <strong> ¿Está Seguro de Continuar?</strong>
                </p>

                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true)
                    @Html.HiddenFor(model => model.IdEmpleados)
                }
            </div>
            <div class="modal-footer">
                @if (Model.IdEmpleados > 0)
                {
                    <a href="/Empleados/Delete/@Model.IdEmpleados" class="btn btn-danger">Si, Borrar el Empleado.</a>
                }
                <button type="button" class="btn btn-primary" onclick="$('#ModalEliminar').modal('hide')">No, Borrar el Empleado.</button>
            </div>
        </div>
    </div>
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
