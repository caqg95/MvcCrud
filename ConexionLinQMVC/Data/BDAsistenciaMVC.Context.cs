//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ConexionLinQMVC.Data
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class BDAsistenciaMVCEntities : DbContext
    {
        public BDAsistenciaMVCEntities()
            : base("name=BDAsistenciaMVCEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<tblDepartamento> tblDepartamento { get; set; }
        public virtual DbSet<tblDias> tblDias { get; set; }
        public virtual DbSet<tblEmpleados> tblEmpleados { get; set; }
        public virtual DbSet<tblTipoJustificacion> tblTipoJustificacion { get; set; }
        public virtual DbSet<tblTurnos> tblTurnos { get; set; }
        public virtual DbSet<tblJustificacionPersonal> tblJustificacionPersonal { get; set; }
        public virtual DbSet<tblRegistroMarcas> tblRegistroMarcas { get; set; }
        public virtual DbSet<AspNetRoles> AspNetRoles { get; set; }
        public virtual DbSet<AspNetUserClaims> AspNetUserClaims { get; set; }
        public virtual DbSet<AspNetUserLogins> AspNetUserLogins { get; set; }
        public virtual DbSet<AspNetUsers> AspNetUsers { get; set; }
    
        public virtual ObjectResult<Usp_ListarDepartamento_Result> Usp_ListarDepartamento()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Usp_ListarDepartamento_Result>("Usp_ListarDepartamento");
        }
    
        public virtual int Usp_DeleteDepartamento(Nullable<int> idDepartamento)
        {
            var idDepartamentoParameter = idDepartamento.HasValue ?
                new ObjectParameter("IdDepartamento", idDepartamento) :
                new ObjectParameter("IdDepartamento", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_DeleteDepartamento", idDepartamentoParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> Usp_InsertDepartamento(string departamento)
        {
            var departamentoParameter = departamento != null ?
                new ObjectParameter("Departamento", departamento) :
                new ObjectParameter("Departamento", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("Usp_InsertDepartamento", departamentoParameter);
        }
    
        public virtual int Usp_UpdateDepartamento(Nullable<int> idDepartamento, string departamento)
        {
            var idDepartamentoParameter = idDepartamento.HasValue ?
                new ObjectParameter("IdDepartamento", idDepartamento) :
                new ObjectParameter("IdDepartamento", typeof(int));
    
            var departamentoParameter = departamento != null ?
                new ObjectParameter("Departamento", departamento) :
                new ObjectParameter("Departamento", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_UpdateDepartamento", idDepartamentoParameter, departamentoParameter);
        }
    
        public virtual int Usp_DeleteDias(Nullable<int> idDias)
        {
            var idDiasParameter = idDias.HasValue ?
                new ObjectParameter("IdDias", idDias) :
                new ObjectParameter("IdDias", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_DeleteDias", idDiasParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> Usp_InsertDias(Nullable<double> dias)
        {
            var diasParameter = dias.HasValue ?
                new ObjectParameter("Dias", dias) :
                new ObjectParameter("Dias", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("Usp_InsertDias", diasParameter);
        }
    
        public virtual int Usp_UpdateDias(Nullable<int> idDias, Nullable<double> dias)
        {
            var idDiasParameter = idDias.HasValue ?
                new ObjectParameter("IdDias", idDias) :
                new ObjectParameter("IdDias", typeof(int));
    
            var diasParameter = dias.HasValue ?
                new ObjectParameter("Dias", dias) :
                new ObjectParameter("Dias", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_UpdateDias", idDiasParameter, diasParameter);
        }
    
        public virtual int Usp_DeleteEmpleados(Nullable<int> idEmpleados)
        {
            var idEmpleadosParameter = idEmpleados.HasValue ?
                new ObjectParameter("IdEmpleados", idEmpleados) :
                new ObjectParameter("IdEmpleados", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_DeleteEmpleados", idEmpleadosParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> Usp_InsertEmpleados(string nombres, Nullable<bool> activo, Nullable<int> idDepartamento, Nullable<int> idTurno, Nullable<double> salario, string diaLibre)
        {
            var nombresParameter = nombres != null ?
                new ObjectParameter("Nombres", nombres) :
                new ObjectParameter("Nombres", typeof(string));
    
            var activoParameter = activo.HasValue ?
                new ObjectParameter("Activo", activo) :
                new ObjectParameter("Activo", typeof(bool));
    
            var idDepartamentoParameter = idDepartamento.HasValue ?
                new ObjectParameter("IdDepartamento", idDepartamento) :
                new ObjectParameter("IdDepartamento", typeof(int));
    
            var idTurnoParameter = idTurno.HasValue ?
                new ObjectParameter("IdTurno", idTurno) :
                new ObjectParameter("IdTurno", typeof(int));
    
            var salarioParameter = salario.HasValue ?
                new ObjectParameter("Salario", salario) :
                new ObjectParameter("Salario", typeof(double));
    
            var diaLibreParameter = diaLibre != null ?
                new ObjectParameter("DiaLibre", diaLibre) :
                new ObjectParameter("DiaLibre", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("Usp_InsertEmpleados", nombresParameter, activoParameter, idDepartamentoParameter, idTurnoParameter, salarioParameter, diaLibreParameter);
        }
    
        public virtual int Usp_UpdateEmpleados(Nullable<int> idEmpleados, string nombres, Nullable<bool> activo, Nullable<int> idDepartamento, Nullable<int> idTurno, Nullable<double> salario, string diaLibre)
        {
            var idEmpleadosParameter = idEmpleados.HasValue ?
                new ObjectParameter("IdEmpleados", idEmpleados) :
                new ObjectParameter("IdEmpleados", typeof(int));
    
            var nombresParameter = nombres != null ?
                new ObjectParameter("Nombres", nombres) :
                new ObjectParameter("Nombres", typeof(string));
    
            var activoParameter = activo.HasValue ?
                new ObjectParameter("Activo", activo) :
                new ObjectParameter("Activo", typeof(bool));
    
            var idDepartamentoParameter = idDepartamento.HasValue ?
                new ObjectParameter("IdDepartamento", idDepartamento) :
                new ObjectParameter("IdDepartamento", typeof(int));
    
            var idTurnoParameter = idTurno.HasValue ?
                new ObjectParameter("IdTurno", idTurno) :
                new ObjectParameter("IdTurno", typeof(int));
    
            var salarioParameter = salario.HasValue ?
                new ObjectParameter("Salario", salario) :
                new ObjectParameter("Salario", typeof(double));
    
            var diaLibreParameter = diaLibre != null ?
                new ObjectParameter("DiaLibre", diaLibre) :
                new ObjectParameter("DiaLibre", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_UpdateEmpleados", idEmpleadosParameter, nombresParameter, activoParameter, idDepartamentoParameter, idTurnoParameter, salarioParameter, diaLibreParameter);
        }
    
        public virtual int Usp_DeleteTipoJustificacion(Nullable<int> idJustificacion)
        {
            var idJustificacionParameter = idJustificacion.HasValue ?
                new ObjectParameter("IdJustificacion", idJustificacion) :
                new ObjectParameter("IdJustificacion", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_DeleteTipoJustificacion", idJustificacionParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> Usp_InsertTipoJustificacion(string justificacion)
        {
            var justificacionParameter = justificacion != null ?
                new ObjectParameter("Justificacion", justificacion) :
                new ObjectParameter("Justificacion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("Usp_InsertTipoJustificacion", justificacionParameter);
        }
    
        public virtual int Usp_UpdateTipoJustificacion(Nullable<int> idJustificacion, string justificacion)
        {
            var idJustificacionParameter = idJustificacion.HasValue ?
                new ObjectParameter("IdJustificacion", idJustificacion) :
                new ObjectParameter("IdJustificacion", typeof(int));
    
            var justificacionParameter = justificacion != null ?
                new ObjectParameter("Justificacion", justificacion) :
                new ObjectParameter("Justificacion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_UpdateTipoJustificacion", idJustificacionParameter, justificacionParameter);
        }
    
        public virtual ObjectResult<Usp_ListarEmpleados_Result> Usp_ListarEmpleados()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Usp_ListarEmpleados_Result>("Usp_ListarEmpleados");
        }
    
        public virtual int Usp_DeleteTurnos(Nullable<int> idTurno)
        {
            var idTurnoParameter = idTurno.HasValue ?
                new ObjectParameter("IdTurno", idTurno) :
                new ObjectParameter("IdTurno", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_DeleteTurnos", idTurnoParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> Usp_InsertTurnos(string turno, Nullable<System.DateTime> lunes_Sabado_Inicio, Nullable<System.DateTime> lunes_Sabado_Fin, Nullable<double> horasAlmuerzo, Nullable<System.DateTime> almuerzo_Inicio, Nullable<System.DateTime> almuerzo_Fin)
        {
            var turnoParameter = turno != null ?
                new ObjectParameter("Turno", turno) :
                new ObjectParameter("Turno", typeof(string));
    
            var lunes_Sabado_InicioParameter = lunes_Sabado_Inicio.HasValue ?
                new ObjectParameter("Lunes_Sabado_Inicio", lunes_Sabado_Inicio) :
                new ObjectParameter("Lunes_Sabado_Inicio", typeof(System.DateTime));
    
            var lunes_Sabado_FinParameter = lunes_Sabado_Fin.HasValue ?
                new ObjectParameter("Lunes_Sabado_Fin", lunes_Sabado_Fin) :
                new ObjectParameter("Lunes_Sabado_Fin", typeof(System.DateTime));
    
            var horasAlmuerzoParameter = horasAlmuerzo.HasValue ?
                new ObjectParameter("HorasAlmuerzo", horasAlmuerzo) :
                new ObjectParameter("HorasAlmuerzo", typeof(double));
    
            var almuerzo_InicioParameter = almuerzo_Inicio.HasValue ?
                new ObjectParameter("Almuerzo_Inicio", almuerzo_Inicio) :
                new ObjectParameter("Almuerzo_Inicio", typeof(System.DateTime));
    
            var almuerzo_FinParameter = almuerzo_Fin.HasValue ?
                new ObjectParameter("Almuerzo_Fin", almuerzo_Fin) :
                new ObjectParameter("Almuerzo_Fin", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("Usp_InsertTurnos", turnoParameter, lunes_Sabado_InicioParameter, lunes_Sabado_FinParameter, horasAlmuerzoParameter, almuerzo_InicioParameter, almuerzo_FinParameter);
        }
    
        public virtual ObjectResult<Usp_ListarTurnos_Result> Usp_ListarTurnos()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Usp_ListarTurnos_Result>("Usp_ListarTurnos");
        }
    
        public virtual int Usp_UpdateTurnos(Nullable<int> idTurno, string turno, Nullable<System.DateTime> lunes_Sabado_Inicio, Nullable<System.DateTime> lunes_Sabado_Fin, Nullable<double> horasAlmuerzo, Nullable<System.DateTime> almuerzo_Inicio, Nullable<System.DateTime> almuerzo_Fin)
        {
            var idTurnoParameter = idTurno.HasValue ?
                new ObjectParameter("IdTurno", idTurno) :
                new ObjectParameter("IdTurno", typeof(int));
    
            var turnoParameter = turno != null ?
                new ObjectParameter("Turno", turno) :
                new ObjectParameter("Turno", typeof(string));
    
            var lunes_Sabado_InicioParameter = lunes_Sabado_Inicio.HasValue ?
                new ObjectParameter("Lunes_Sabado_Inicio", lunes_Sabado_Inicio) :
                new ObjectParameter("Lunes_Sabado_Inicio", typeof(System.DateTime));
    
            var lunes_Sabado_FinParameter = lunes_Sabado_Fin.HasValue ?
                new ObjectParameter("Lunes_Sabado_Fin", lunes_Sabado_Fin) :
                new ObjectParameter("Lunes_Sabado_Fin", typeof(System.DateTime));
    
            var horasAlmuerzoParameter = horasAlmuerzo.HasValue ?
                new ObjectParameter("HorasAlmuerzo", horasAlmuerzo) :
                new ObjectParameter("HorasAlmuerzo", typeof(double));
    
            var almuerzo_InicioParameter = almuerzo_Inicio.HasValue ?
                new ObjectParameter("Almuerzo_Inicio", almuerzo_Inicio) :
                new ObjectParameter("Almuerzo_Inicio", typeof(System.DateTime));
    
            var almuerzo_FinParameter = almuerzo_Fin.HasValue ?
                new ObjectParameter("Almuerzo_Fin", almuerzo_Fin) :
                new ObjectParameter("Almuerzo_Fin", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_UpdateTurnos", idTurnoParameter, turnoParameter, lunes_Sabado_InicioParameter, lunes_Sabado_FinParameter, horasAlmuerzoParameter, almuerzo_InicioParameter, almuerzo_FinParameter);
        }
    
        public virtual ObjectResult<Usp_ListarDias_Result> Usp_ListarDias()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Usp_ListarDias_Result>("Usp_ListarDias");
        }
    
        public virtual ObjectResult<Usp_ListarTipoJustificacion_Result> Usp_ListarTipoJustificacion()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Usp_ListarTipoJustificacion_Result>("Usp_ListarTipoJustificacion");
        }
    
        public virtual int Usp_DeleteJustificacionPersonal(Nullable<int> idEmpleados, Nullable<int> idJustificacion, Nullable<System.DateTime> fechaI, Nullable<System.DateTime> fechaF, Nullable<int> idDias, string observaciones)
        {
            var idEmpleadosParameter = idEmpleados.HasValue ?
                new ObjectParameter("IdEmpleados", idEmpleados) :
                new ObjectParameter("IdEmpleados", typeof(int));
    
            var idJustificacionParameter = idJustificacion.HasValue ?
                new ObjectParameter("IdJustificacion", idJustificacion) :
                new ObjectParameter("IdJustificacion", typeof(int));
    
            var fechaIParameter = fechaI.HasValue ?
                new ObjectParameter("FechaI", fechaI) :
                new ObjectParameter("FechaI", typeof(System.DateTime));
    
            var fechaFParameter = fechaF.HasValue ?
                new ObjectParameter("FechaF", fechaF) :
                new ObjectParameter("FechaF", typeof(System.DateTime));
    
            var idDiasParameter = idDias.HasValue ?
                new ObjectParameter("IdDias", idDias) :
                new ObjectParameter("IdDias", typeof(int));
    
            var observacionesParameter = observaciones != null ?
                new ObjectParameter("Observaciones", observaciones) :
                new ObjectParameter("Observaciones", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_DeleteJustificacionPersonal", idEmpleadosParameter, idJustificacionParameter, fechaIParameter, fechaFParameter, idDiasParameter, observacionesParameter);
        }
    
        public virtual int Usp_InsertJustificacionPersonal(Nullable<int> idEmpleados, Nullable<int> idJustificacion, Nullable<System.DateTime> fechaI, Nullable<System.DateTime> fechaF, Nullable<int> idDias, string observaciones)
        {
            var idEmpleadosParameter = idEmpleados.HasValue ?
                new ObjectParameter("IdEmpleados", idEmpleados) :
                new ObjectParameter("IdEmpleados", typeof(int));
    
            var idJustificacionParameter = idJustificacion.HasValue ?
                new ObjectParameter("IdJustificacion", idJustificacion) :
                new ObjectParameter("IdJustificacion", typeof(int));
    
            var fechaIParameter = fechaI.HasValue ?
                new ObjectParameter("FechaI", fechaI) :
                new ObjectParameter("FechaI", typeof(System.DateTime));
    
            var fechaFParameter = fechaF.HasValue ?
                new ObjectParameter("FechaF", fechaF) :
                new ObjectParameter("FechaF", typeof(System.DateTime));
    
            var idDiasParameter = idDias.HasValue ?
                new ObjectParameter("IdDias", idDias) :
                new ObjectParameter("IdDias", typeof(int));
    
            var observacionesParameter = observaciones != null ?
                new ObjectParameter("Observaciones", observaciones) :
                new ObjectParameter("Observaciones", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_InsertJustificacionPersonal", idEmpleadosParameter, idJustificacionParameter, fechaIParameter, fechaFParameter, idDiasParameter, observacionesParameter);
        }
    
        public virtual int Usp_UpdateJustificacionPersonal(Nullable<int> idEmpleados, Nullable<int> idJustificacion, Nullable<System.DateTime> fechaI, Nullable<System.DateTime> fechaF, Nullable<int> idDias, string observaciones)
        {
            var idEmpleadosParameter = idEmpleados.HasValue ?
                new ObjectParameter("IdEmpleados", idEmpleados) :
                new ObjectParameter("IdEmpleados", typeof(int));
    
            var idJustificacionParameter = idJustificacion.HasValue ?
                new ObjectParameter("IdJustificacion", idJustificacion) :
                new ObjectParameter("IdJustificacion", typeof(int));
    
            var fechaIParameter = fechaI.HasValue ?
                new ObjectParameter("FechaI", fechaI) :
                new ObjectParameter("FechaI", typeof(System.DateTime));
    
            var fechaFParameter = fechaF.HasValue ?
                new ObjectParameter("FechaF", fechaF) :
                new ObjectParameter("FechaF", typeof(System.DateTime));
    
            var idDiasParameter = idDias.HasValue ?
                new ObjectParameter("IdDias", idDias) :
                new ObjectParameter("IdDias", typeof(int));
    
            var observacionesParameter = observaciones != null ?
                new ObjectParameter("Observaciones", observaciones) :
                new ObjectParameter("Observaciones", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_UpdateJustificacionPersonal", idEmpleadosParameter, idJustificacionParameter, fechaIParameter, fechaFParameter, idDiasParameter, observacionesParameter);
        }
    
        public virtual int Usp_DeleteRegistroMarcas(Nullable<int> idEmpleados, Nullable<System.DateTime> fecha, Nullable<System.DateTime> h_Ent1, Nullable<System.DateTime> h_Sal1, Nullable<System.DateTime> h_Ent2, Nullable<System.DateTime> h_Sal2)
        {
            var idEmpleadosParameter = idEmpleados.HasValue ?
                new ObjectParameter("IdEmpleados", idEmpleados) :
                new ObjectParameter("IdEmpleados", typeof(int));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(System.DateTime));
    
            var h_Ent1Parameter = h_Ent1.HasValue ?
                new ObjectParameter("H_Ent1", h_Ent1) :
                new ObjectParameter("H_Ent1", typeof(System.DateTime));
    
            var h_Sal1Parameter = h_Sal1.HasValue ?
                new ObjectParameter("H_Sal1", h_Sal1) :
                new ObjectParameter("H_Sal1", typeof(System.DateTime));
    
            var h_Ent2Parameter = h_Ent2.HasValue ?
                new ObjectParameter("H_Ent2", h_Ent2) :
                new ObjectParameter("H_Ent2", typeof(System.DateTime));
    
            var h_Sal2Parameter = h_Sal2.HasValue ?
                new ObjectParameter("H_Sal2", h_Sal2) :
                new ObjectParameter("H_Sal2", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_DeleteRegistroMarcas", idEmpleadosParameter, fechaParameter, h_Ent1Parameter, h_Sal1Parameter, h_Ent2Parameter, h_Sal2Parameter);
        }
    
        public virtual int Usp_InsertRegistroMarcas(Nullable<int> idEmpleados, Nullable<System.DateTime> fecha, Nullable<System.DateTime> h_Ent1, Nullable<System.DateTime> h_Sal1, Nullable<System.DateTime> h_Ent2, Nullable<System.DateTime> h_Sal2)
        {
            var idEmpleadosParameter = idEmpleados.HasValue ?
                new ObjectParameter("IdEmpleados", idEmpleados) :
                new ObjectParameter("IdEmpleados", typeof(int));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(System.DateTime));
    
            var h_Ent1Parameter = h_Ent1.HasValue ?
                new ObjectParameter("H_Ent1", h_Ent1) :
                new ObjectParameter("H_Ent1", typeof(System.DateTime));
    
            var h_Sal1Parameter = h_Sal1.HasValue ?
                new ObjectParameter("H_Sal1", h_Sal1) :
                new ObjectParameter("H_Sal1", typeof(System.DateTime));
    
            var h_Ent2Parameter = h_Ent2.HasValue ?
                new ObjectParameter("H_Ent2", h_Ent2) :
                new ObjectParameter("H_Ent2", typeof(System.DateTime));
    
            var h_Sal2Parameter = h_Sal2.HasValue ?
                new ObjectParameter("H_Sal2", h_Sal2) :
                new ObjectParameter("H_Sal2", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usp_InsertRegistroMarcas", idEmpleadosParameter, fechaParameter, h_Ent1Parameter, h_Sal1Parameter, h_Ent2Parameter, h_Sal2Parameter);
        }
    
        public virtual ObjectResult<Usp_ListarJustificacionPersonal_Result> Usp_ListarJustificacionPersonal()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Usp_ListarJustificacionPersonal_Result>("Usp_ListarJustificacionPersonal");
        }
    
        public virtual ObjectResult<Usp_ListarRegistroMarcas_Result> Usp_ListarRegistroMarcas()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Usp_ListarRegistroMarcas_Result>("Usp_ListarRegistroMarcas");
        }
    }
}
